{"version":3,"sources":["utils/gameHelpers.js","img/bg.png","components/styles/StyledTetris.js","components/styles/StyledCell.js","utils/tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","utils/useStage.js","utils/useGameStatus.js","components/Tetris.js","utils/usePlayer.js","utils/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","StyledCell","props","color","type","TETROMINOS","shape","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","Cell","React","memo","StyledStage","height","width","Stage","map","row","cell","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","direction","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","dir","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onkeyup","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6656174.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from \"styled-components\";\r\nimport bgImage from '../../img/bg.png'\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${props => props.color}, 0.8);\r\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${props => props.color}, 0.1);\r\n  border-right-color: rgba(${props => props.color}, 1);\r\n  border-top-color: rgba(${props => props.color}, 1);\r\n  border-left-color: rgba(${props => props.color}, 0.3);\r\n`","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  I: {\r\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\r\n    color: '80, 227, 230',\r\n  },\r\n  J: {\r\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\r\n    color: '36, 95, 223',\r\n  },\r\n  L: {\r\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\r\n    color: '223, 173, 36',\r\n  },\r\n  O: {\r\n    shape: [['O', 'O'], ['O', 'O']],\r\n    color: '223, 217, 36',\r\n  },\r\n  S: {\r\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\r\n    color: '48, 211, 56',\r\n  },\r\n  T: {\r\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\r\n    color: '132, 61, 198',\r\n  },\r\n  Z: {\r\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\r\n    color: '227, 78, 78',\r\n  },\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ';\r\n  const randTetromino =\r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n  return TETROMINOS[randTetromino];\r\n};","import React from \"react\";\r\nimport { StyledCell } from './styles/StyledCell'\r\nimport { TETROMINOS } from \"../utils/tetrominos\";\r\n\r\nfunction Cell({ type }) {\r\n  return (\r\n    <StyledCell type={type} color={TETROMINOS[type].color} />\r\n  )\r\n}\r\n\r\nexport default React.memo(Cell);\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(${props => props.height}, calc(25vw / ${props => props.width}));\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #111;\r\n`","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport { StyledStage } from './styles/StyledStage'\r\n\r\nfunction Stage({ stage }) {\r\n  return (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n      {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n  )\r\n}\r\n\r\nexport default Stage;","import styled from \"styled-components\";\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 20px 0;\r\n  border: 4px solid #333;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: black;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`;","import React from \"react\";\r\nimport { StyledDisplay } from \"./styles/StyledDisplay\";\r\n\r\nfunction Display({ gameOver, text }) {\r\n  return (\r\n    <StyledDisplay gameOver={gameOver}>{ text }</StyledDisplay>\r\n  )\r\n}\r\n\r\nexport default Display;","import styled from \"styled-components\";\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`","import React from \"react\";\r\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\r\n\r\nfunction StartButton({ callback }) {\r\n  return (\r\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n  )\r\n}\r\n\r\nexport default StartButton;","import { useState, useEffect } from 'react';\r\nimport { createStage } from './gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev +1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, [])\r\n\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n      );\r\n\r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then check if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prev => updateStage(prev));\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};","import { useEffect, useState, useCallback } from 'react'\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    // if there is a score\r\n    if (rowsCleared > 0){\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level+1))\r\n      setRows(prev => prev + rowsCleared);\r\n\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel]\r\n};","import React, { useState } from \"react\";\r\nimport { createStage, checkCollision } from \"../utils/gameHelpers\";\r\n\r\n// styled components\r\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\r\n// components\r\nimport Stage from \"./Stage\";\r\nimport Display from \"./Display\";\r\nimport StartButton from \"./StartButton\";\r\n// hooks\r\nimport { usePlayer } from \"../utils/usePlayer\";\r\nimport { useStage } from \"../utils/useStage\";\r\nimport { useInterval } from \"../utils/useInterval\";\r\nimport { useGameStatus } from \"../utils/useGameStatus\";\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n  console.log('re-render');\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n      return;\r\n    }\r\n  }\r\n\r\n  const startGame = () => {\r\n    console.log(\"test\")\r\n    // Reset everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  }\r\n\r\n  const drop = () => {\r\n    // increase level each 10 rows cleared\r\n    if (rows > (level +1) * 10) {\r\n      setLevel(prev => prev + 1);\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false })\r\n    } else {\r\n      // Game Over\r\n      if (player.pos.y < 1) {\r\n        console.log(\"GAME OVER!!!\");\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  }\r\n\r\n  const keypUp = ({keyCode}) => {\r\n    if (!gameOver) {\r\n      if(keyCode === 40) {\r\n        setDropTime(1000 / (level + 1) + 200);\r\n      }\r\n    }\r\n  }\r\n  const dropPlayer = () => {\r\n    drop();\r\n  }\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime)\r\n\r\n  return (\r\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onkeyup={keypUp}>\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`Rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;","import { useState, useCallback } from 'react';\r\nimport { TETROMINOS, randomTetromino } from './tetrominos';\r\nimport { checkCollision, STAGE_WIDTH } from './gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x + x), y: (prev.pos.y + y)},\r\n      collided,\r\n    }))\r\n  }\r\n\r\n  const rotate = (matrix, direction) => {\r\n    // make the rows columns\r\n    const rotatedTetro = matrix.map((_, index) => \r\n      matrix.map(col => col[index]),\r\n    );\r\n    // reverse each row to get a rotated matrix\r\n    if (direction > 0){\r\n      return rotatedTetro.map(row => row.reverse());\r\n    } else {\r\n      return rotatedTetro.reverse\r\n    } \r\n  }\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while(checkCollision(clonedPlayer,stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos ;\r\n        return;\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport Tetis from \"./components/Tetris\"\n\nfunction App() {\n  return (\n    <Tetis />    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}